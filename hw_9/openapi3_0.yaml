openapi: 3.0.3
info:
  title: Cloud service
  description: |-
    This is Swagger Cloud service.
   
    Some useful links:
    - [Link to my homework on GitHub](https://github.com/Bev0802/ArhetekturaPOHomeWork/tree/main/hw_9)
    
    ___________________________
  version: 0.0.1  
  
  contact:
    email: bev0802@yandex.ru
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  
externalDocs:
  description: Find out more about "Cloud service"
  url: https://github.com/Bev0802/ArhetekturaPOHomeWork/tree/main/hw_9
  
servers:
  - url: http://localhost:8080/api/v1
    description: dev servers
  - url: http://localhost:8080/api/v2
    description: dev servers  


paths:
  /tariff:
    get:
      tags:
        - Tariff (Тариф)
      summary: Получение списка Тарифов Облачного сервиса
      description: Получение списка Тарифов Облачного сервиса
      operationId: getRate
      requestBody:
        description: Получение списка Тарифов Облачного сервиса
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tariff'
          application/xml:
            schema:
              $ref: '#/components/schemas/Tariff'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tariff'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tariff'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Tariff'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
        '422':
          description: Validation exception
      security:
        - petstore_auth:
            - write:pets
            - read:pets
    post:
      tags:
        - Tariff (Тариф)
      summary: Добавление нового тарифа
      description: Добавление нового тарифа
      operationId: addRate
      requestBody:
        description: Созание нового тарифа
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tariff'
          application/xml:
            schema:
              $ref: '#/components/schemas/Tariff'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tariff'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tariff'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Tariff'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
      security:
        - petstore_auth:
            - write:pets
            - read:pets  
  /tariff/{idTariff}:
    put:
      tags:
        - Tariff (Тариф)
      summary: Изменение тарифа
      description: Изменение имеющегося тарифа
      operationId: updateRate
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: idTariff
          in: path
          description: Rate id to delete
          required: true
          schema:
            type: integer
            format: int64      
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tariff'          
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tariff'
        '400':
          description: Invalid status value
      security:
        - petstore_auth:
            - write:pets
            - read:pets   
    delete:
      tags:
        - Tariff (Тариф)
      summary: Удаление тарифа
      description: Удаление тарифа
      operationId: deleteRate
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: idTariff
          in: path
          description: Rate id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid pet value
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  
  /order:
    get:
      tags:
        - Order (заказ)
      summary: Возвращете список заказов
      description: Возвращете список заказов
      operationId: getOrder
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: integer
                  format: int32
      security:
        - api_key: []  
    post:
      tags:
        - Order (заказ)
      summary: Создание нового заказа
      description: Создание нового заказа
      operationId: postOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/xml:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
  /order/{orderId}:
    get:
      tags:
        - Order (заказ)
      summary: Поиск заказа по ID
      description: показа заказа
      operationId: getOrderById
      parameters:
        - name: orderId
          in: path
          description: ID of order that needs to be fetched
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
    put:
      tags:
        - Order (заказ)
      summary: Изменение заказа
      description: зменение заказа в облака
      operationId: updateOrder
      parameters:
        - name: orderId
          in: path
          description: ID of the order that needs to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found      
    delete:
      tags:
        - Order (заказ)
      summary: Удаление заказа
      description: Удаление заказа из облака
      operationId: deleteOrder
      parameters:
        - name: orderId
          in: path
          description: ID of the order that needs to be deleted
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
  /user:
    post:
      tags:
        - User
      summary: Создание пользователя 
      description: 
      operationId: createUser
      requestBody:
        description: Создание пользователя 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User' 
  /user/login:
    get:
      tags:
        - User
      summary: Авторизация пользователя
      description: ''
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: Имя пользователя для входа в систему
          required: false
          schema:
            type: string
        - name: password
          in: query
          description: Пароль для входа в систему
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
        '400':
          description: Invalid username/password supplied
  /user/{username}:
    put:
      tags:
        - User
      summary: Изменение данных пользователя
      description: Изменение данных пользователя
      operationId: updateUser
      parameters:
        - name: username
          in: path
          description: имя которое нужно изменить
          required: true
          schema:
            type: string
      requestBody:
        description: Обнолвление пользователя
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        default:
          description: successful operation
    delete:
      tags:
        - User
      summary: Удаление пользователя 
      description: TУдаление пользователя из Облака
      operationId: deleteUser
      parameters:
        - name: username
          in: path
          description: Это имя пользователя которого нужно удалить
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
components:
  schemas:
    Tariff:
      required:
        - name
        - photoUrls
      type: object
      properties:
        idTariff:
          type: integer
          format: int64
          example: 10
        nameTariff:
          type: string
          example: basaTariff
        server:
          type: string
          example: XY-200
        price:
          type: integer
          format: int32
          example: 1000
                                      
      xml:
        name: tariff
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        IdUser:
          type: integer
          format: int64
          example: 19
        IdTariff:
          type: integer
          format: int32
          example: 7
        term:
          type: integer
          format: int32
          example: 12
        sum:
          type: integer
          format: int32
          example: 12000
        ipAdress:
          type: integer
          format: int64
          example: 127.00.00.01
        
      xml:
        name: order
    
    User:
      type: object
      properties:
        idUser:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: theUser
        hash:
          type: string
          example: John
        lastName:
          type: string
          example: 80bf84f96ae1c239
        email:
          type: string
          example: john@email.com       
      xml:
        name: user   